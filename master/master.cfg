# -*- python -*-
# ex: set filetype=python:

import os
from buildbot.plugins import *
from buildbot.process import factory

c = BuildmasterConfig = {}

c['buildbotNetUsageData'] = None

####### SECRETS

c['secretsProviders'] = [
    secrets.SecretInAFile(dirname=os.path.join(os.path.dirname(os.path.realpath(__file__)), "secrets_files"))
]

####### WORKERS

c['workers'] = [
    worker.LocalWorker("local-worker0", "pass", max_builds=1)
]

c['protocols'] = {'pb': {'port': 9989}}

####### CHANGESOURCES

c['change_source'] = []
c['change_source'].append(changes.GitPoller(
        'https://github.com/microcai/gentoozh.git',
        workdir='gitpoller-workdir', branch='master',
        pollInterval=300))

####### SCHEDULERS

emerge_update_scheduler = schedulers.Periodic(name="emerge-update",
    builderNames=["emerge-update"],
    periodicBuildTimer=24*60*60
)

emerge_install_scheduler = schedulers.ForceScheduler(name="emerge-install",
    builderNames=["emerge-install"],
    codebases=[
        util.CodebaseParameter(
            "",
            label='',
            branch=util.FixedParameter(name="branch", default=""),
            revision=util.FixedParameter(name="revision", default=""),
            repository=util.FixedParameter(name="repository", default=""),
            project=util.FixedParameter(name="project", default=""),
        ),
    ],
    reason = util.FixedParameter(name="reason", default=""),
    properties = [
        util.StringParameter(
            name='atom',
            label='package atom',
            required=True,
        ),
    ],
)

c['schedulers'] = [
    emerge_update_scheduler,
    emerge_install_scheduler,
]

####### BUILDERS

emerge_update_factory = util.BuildFactory()
emerge_update_factory.addStep(steps.ShellCommand(
	name='neofetch',
	command=['neofetch'],
))
emerge_update_factory.addStep(steps.ShellCommand(
	name='make.conf',
	command=['cat', '/etc/portage/make.conf'],
))
emerge_update_factory.addStep(steps.ShellCommand(
	name='emerge sync',
	command=['emerge', '--sync'],
))
emerge_update_factory.addStep(steps.ShellCommand(
	name='emerge info',
	command=['emerge', '--info', '--verbose'],
))
emerge_update_factory.addStep(steps.ShellCommand(
	name='emerge update',
	command=['emerge', '--quiet', '--verbose', '--update', '--deep', '--newuse', '--keep-going', '@world'],
))

emerge_install_factory = util.BuildFactory()
emerge_install_factory.addStep(steps.ShellCommand(
	name='eix update',
	command=['eix-update'],
))
emerge_install_factory.addStep(steps.ShellCommand(
	name='eix info',
	command=['eix', util.Interpolate('%(prop:atom)s')],
))
emerge_install_factory.addStep(steps.ShellCommand(
	name='emerge install',
	command=['emerge', '--verbose', '--autounmask-keep-keywords=y', '--autounmask-use=y', '--autounmask-continue', '--autounmask-write', util.Interpolate('%(prop:atom)s')],
))

build_lock = util.WorkerLock("worker_builds", maxCount=1)

c['builders'] = []
c['builders'].extend([
    util.BuilderConfig(
        name="emerge-update",
        workernames=["local-worker0"],
        factory=emerge_update_factory,
        locks=[ build_lock.access('counting') ],
    ),
    util.BuilderConfig(
        name="emerge-install",
        workernames=["local-worker0"],
        factory=emerge_install_factory,
        locks=[ build_lock.access('counting') ],
    )
])

####### BUILDBOT SERVICES

c['services'] = []

####### PROJECT IDENTITY

c['title'] = "Gentoozh CI"
c['titleURL'] = "gentoozh.yongxiang.org"

c['buildbotURL'] = "https://gentoo-zh.yongxiang.org/"

# minimalistic config to activate new web UI
c['www'] = dict(port="tcp:8010:interface=127.0.0.1",
                plugins=dict(waterfall_view={}, console_view={}, grid_view={}))

####### DB URL

c['db'] = {'db_url': 'postgresql://buildbot:bu1ldb0t@127.0.0.1/buildbot'}

